/**
 * BookingDetailModal Component
 * Modal hi·ªÉn th·ªã chi ti·∫øt ƒë·∫ßy ƒë·ªß th√¥ng tin ƒë∆°n thu√™
 * - Th√¥ng tin kh√°ch h√†ng (renter + CCCD)
 * - Th√¥ng tin xe (license_plate, name, brand, type, rating)
 * - Th·ªùi gian thu√™ (start_time, expected_end_time, actual_end_time)
 * - Gi√° thu√™ + ph·ª• ph√≠ (base_price, extra_fee, deposit_paid, total_amount)
 * - L·ªãch s·ª≠ thanh to√°n (payment_status)
 * - Ghi ch√∫ nh·∫≠n xe, tr·∫£ xe (pickup_notes, return_notes)
 * - T√¨nh tr·∫°ng xe (body_condition) v√† ·∫£nh (photos[])
 */

import { Booking } from "@shared/types";
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
} from "@/components/ui/dialog";
import { Badge } from "@/components/ui/badge";
import { Separator } from "@/components/ui/separator";
import {
  User,
  Car,
  Calendar,
  DollarSign,
  CreditCard,
  FileText,
  Image as ImageIcon,
  Star,
  Phone,
  Mail,
  IdCard,
  Zap,
  Fuel,
  Users,
  AlertTriangle,
  CheckCircle,
} from "lucide-react";

interface BookingDetailModalProps {
  open: boolean;
  onOpenChange: (open: boolean) => void;
  booking: Booking | null;
}

export default function BookingDetailModal({
  open,
  onOpenChange,
  booking,
}: BookingDetailModalProps) {
  if (!booking) return null;

  const formatCurrency = (amount: number) => {
    return new Intl.NumberFormat("vi-VN", {
      style: "currency",
      currency: "VND",
    }).format(amount);
  };

  const formatDateTime = (dateString: string) => {
    const date = new Date(dateString);
    const day = String(date.getDate()).padStart(2, "0");
    const month = String(date.getMonth() + 1).padStart(2, "0");
    const year = date.getFullYear();
    const hours = String(date.getHours()).padStart(2, "0");
    const minutes = String(date.getMinutes()).padStart(2, "0");
    return `${day}/${month}/${year} l√∫c ${hours}:${minutes}`;
  };

  const getStatusBadge = (status: Booking["status"]) => {
    const statusConfig = {
      pending: { label: "‚è≥ Ch·ªù x√°c nh·∫≠n", variant: "secondary" as const },
      confirmed: { label: "‚úÖ ƒê√£ x√°c nh·∫≠n", variant: "default" as const },
      picked_up: { label: "üöó ƒêang thu√™", variant: "default" as const },
      completed: { label: "üèÅ Ho√†n th√†nh", variant: "outline" as const },
      cancelled: { label: "‚ùå ƒê√£ h·ªßy", variant: "destructive" as const },
    };
    return statusConfig[status];
  };

  const getPaymentBadge = (status: Booking["payment_status"]) => {
    const paymentConfig = {
      pending: { label: "‚è≥ Ch·ªù thanh to√°n", variant: "secondary" as const },
      deposit_paid: { label: "üí≥ ƒê√£ ƒë·∫∑t c·ªçc", variant: "default" as const },
      paid: { label: "‚úÖ ƒê√£ thanh to√°n", variant: "default" as const },
      failed: { label: "‚ùå Th·∫•t b·∫°i", variant: "destructive" as const },
    };
    return paymentConfig[status];
  };

  const getBodyConditionBadge = (condition: Booking["body_condition"]) => {
    const conditionConfig = {
      normal: {
        label: "‚úÖ B√¨nh th∆∞·ªùng",
        variant: "default" as const,
        icon: CheckCircle,
      },
      minor_damage: {
        label: "‚ö†Ô∏è H∆∞ h·∫°i nh·∫π",
        variant: "secondary" as const,
        icon: AlertTriangle,
      },
      major_damage: {
        label: "üî¥ H∆∞ h·∫°i n·∫∑ng",
        variant: "destructive" as const,
        icon: AlertTriangle,
      },
    };
    return conditionConfig[condition];
  };

  const statusConfig = getStatusBadge(booking.status);
  const paymentConfig = getPaymentBadge(booking.payment_status);
  const conditionConfig = getBodyConditionBadge(booking.body_condition);
  const ConditionIcon = conditionConfig.icon;

  return (
    <Dialog open={open} onOpenChange={onOpenChange}>
      <DialogContent className="max-w-4xl max-h-[90vh] overflow-y-auto">
        <DialogHeader>
          <DialogTitle className="text-2xl flex items-center gap-2">
            <FileText className="h-6 w-6" />
            Chi ti·∫øt ƒë∆°n thu√™ #{booking.booking_code}
          </DialogTitle>
          <DialogDescription className="flex items-center gap-2 mt-2">
            <Badge variant={statusConfig.variant}>{statusConfig.label}</Badge>
            <Badge variant={paymentConfig.variant}>{paymentConfig.label}</Badge>
          </DialogDescription>
        </DialogHeader>

        <div className="space-y-6 mt-4">
          {/* SECTION 1: KH√ÅCH H√ÄNG */}
          <div className="space-y-3">
            <h3 className="text-lg font-semibold flex items-center gap-2">
              <User className="h-5 w-5 text-primary" />
              Th√¥ng tin kh√°ch h√†ng
            </h3>
            <div className="grid grid-cols-2 gap-4 p-4 bg-muted/50 rounded-lg">
              <div className="space-y-2">
                <div className="flex items-center gap-2 text-sm">
                  <User className="h-4 w-4 text-muted-foreground" />
                  <span className="text-muted-foreground">H·ªç t√™n:</span>
                  <span className="font-medium">
                    {booking.renter?.full_name || "N/A"}
                  </span>
                </div>
                <div className="flex items-center gap-2 text-sm">
                  <Phone className="h-4 w-4 text-muted-foreground" />
                  <span className="text-muted-foreground">ƒêi·ªán tho·∫°i:</span>
                  <span className="font-medium">
                    {booking.renter?.phone || "‚Äî"}
                  </span>
                </div>
                <div className="flex items-center gap-2 text-sm">
                  <Mail className="h-4 w-4 text-muted-foreground" />
                  <span className="text-muted-foreground">Email:</span>
                  <span className="font-medium">
                    {booking.renter?.email || "‚Äî"}
                  </span>
                </div>
              </div>
              <div className="space-y-2">
                <div className="flex items-center gap-2 text-sm">
                  <IdCard className="h-4 w-4 text-muted-foreground" />
                  <span className="text-muted-foreground">CCCD/CMND:</span>
                  <span className="font-medium">
                    {booking.renter?.identity_number || "‚Äî"}
                  </span>
                </div>
                <div className="flex items-center gap-2 text-sm">
                  <IdCard className="h-4 w-4 text-muted-foreground" />
                  <span className="text-muted-foreground">S·ªë GPLX:</span>
                  <span className="font-medium">
                    {booking.renter?.license_number || "‚Äî"}
                  </span>
                </div>
                <div className="flex items-center gap-2 text-sm">
                  <CheckCircle className="h-4 w-4 text-muted-foreground" />
                  <span className="text-muted-foreground">X√°c th·ª±c:</span>
                  {booking.renter?.is_verified ? (
                    <Badge variant="default" className="text-xs">
                      ‚úÖ ƒê√£ x√°c th·ª±c
                    </Badge>
                  ) : (
                    <Badge variant="secondary" className="text-xs">
                      ‚è≥ Ch∆∞a x√°c th·ª±c
                    </Badge>
                  )}
                </div>
              </div>
            </div>
          </div>

          <Separator />

          {/* SECTION 2: XE */}
          <div className="space-y-3">
            <h3 className="text-lg font-semibold flex items-center gap-2">
              <Car className="h-5 w-5 text-primary" />
              Th√¥ng tin xe
            </h3>
            <div className="grid grid-cols-2 gap-4 p-4 bg-muted/50 rounded-lg">
              <div className="space-y-2">
                <div className="flex items-center gap-2 text-sm">
                  <Car className="h-4 w-4 text-muted-foreground" />
                  <span className="text-muted-foreground">T√™n xe:</span>
                  <span className="font-medium">
                    {booking.vehicle?.name || "N/A"}
                  </span>
                </div>
                <div className="flex items-center gap-2 text-sm">
                  <Car className="h-4 w-4 text-muted-foreground" />
                  <span className="text-muted-foreground">Bi·ªÉn s·ªë:</span>
                  <span className="font-medium font-mono">
                    {booking.vehicle?.license_plate || "‚Äî"}
                  </span>
                </div>
                <div className="flex items-center gap-2 text-sm">
                  <Car className="h-4 w-4 text-muted-foreground" />
                  <span className="text-muted-foreground">H√£ng:</span>
                  <span className="font-medium">
                    {booking.vehicle?.brand || "‚Äî"}
                  </span>
                </div>
              </div>
              <div className="space-y-2">
                <div className="flex items-center gap-2 text-sm">
                  {booking.vehicle?.type === "electricity" ? (
                    <Zap className="h-4 w-4 text-blue-500" />
                  ) : (
                    <Fuel className="h-4 w-4 text-orange-500" />
                  )}
                  <span className="text-muted-foreground">Lo·∫°i:</span>
                  <span className="font-medium">
                    {booking.vehicle?.type === "electricity"
                      ? "‚ö° ƒêi·ªán"
                      : "‚õΩ XƒÉng"}
                  </span>
                </div>
                <div className="flex items-center gap-2 text-sm">
                  <Users className="h-4 w-4 text-muted-foreground" />
                  <span className="text-muted-foreground">S·ªë ch·ªó:</span>
                  <span className="font-medium">
                    {booking.vehicle?.capacity || "‚Äî"} ch·ªó
                  </span>
                </div>
                <div className="flex items-center gap-2 text-sm">
                  <Star className="h-4 w-4 text-yellow-400 fill-yellow-400" />
                  <span className="text-muted-foreground">ƒê√°nh gi√°:</span>
                  <span className="font-medium">
                    {booking.vehicle?.rating || "‚Äî"}/5.0
                  </span>
                </div>
              </div>
            </div>
          </div>

          <Separator />

          {/* SECTION 3: TH·ªúI GIAN THU√ä */}
          <div className="space-y-3">
            <h3 className="text-lg font-semibold flex items-center gap-2">
              <Calendar className="h-5 w-5 text-primary" />
              Th·ªùi gian thu√™ xe
            </h3>
            <div className="grid grid-cols-3 gap-4 p-4 bg-muted/50 rounded-lg">
              <div className="space-y-1">
                <p className="text-xs text-muted-foreground">B·∫Øt ƒë·∫ßu thu√™</p>
                <p className="font-semibold text-green-600 flex items-center gap-1">
                  <Calendar className="h-4 w-4" />
                  {formatDateTime(booking.start_time)}
                </p>
              </div>
              <div className="space-y-1">
                <p className="text-xs text-muted-foreground">D·ª± ki·∫øn tr·∫£ xe</p>
                <p className="font-semibold text-orange-600 flex items-center gap-1">
                  <Calendar className="h-4 w-4" />
                  {formatDateTime(booking.expected_end_time)}
                </p>
              </div>
              {booking.actual_end_time && (
                <div className="space-y-1">
                  <p className="text-xs text-muted-foreground">
                    Th·ª±c t·∫ø tr·∫£ xe
                  </p>
                  <p className="font-semibold text-blue-600 flex items-center gap-1">
                    <CheckCircle className="h-4 w-4" />
                    {formatDateTime(booking.actual_end_time)}
                  </p>
                </div>
              )}
            </div>
          </div>

          <Separator />

          {/* SECTION 4: CHI PH√ç */}
          <div className="space-y-3">
            <h3 className="text-lg font-semibold flex items-center gap-2">
              <DollarSign className="h-5 w-5 text-primary" />
              Chi ph√≠ thu√™ xe
            </h3>
            <div className="p-4 bg-muted/50 rounded-lg space-y-3">
              <div className="flex justify-between items-center">
                <span className="text-muted-foreground">Gi√° thu√™ c∆° b·∫£n:</span>
                <span className="font-semibold">
                  {formatCurrency(booking.base_price)}
                </span>
              </div>
              <div className="flex justify-between items-center">
                <span className="text-muted-foreground">Ph√≠ ph√°t sinh:</span>
                <span className="font-semibold text-orange-600">
                  {booking.extra_fee > 0
                    ? `+${formatCurrency(booking.extra_fee)}`
                    : formatCurrency(0)}
                </span>
              </div>
              <div className="flex justify-between items-center">
                <span className="text-muted-foreground">Ti·ªÅn ƒë·∫∑t c·ªçc:</span>
                <span className="font-semibold text-blue-600">
                  {formatCurrency(booking.deposit_paid)}
                </span>
              </div>
              <Separator />
              <div className="flex justify-between items-center text-lg">
                <span className="font-bold">T·ªïng c·ªông:</span>
                <span className="font-bold text-green-600">
                  {formatCurrency(booking.total_amount)}
                </span>
              </div>
              <div className="flex items-center gap-2 mt-2">
                <CreditCard className="h-4 w-4 text-muted-foreground" />
                <span className="text-sm text-muted-foreground">
                  Tr·∫°ng th√°i thanh to√°n:
                </span>
                <Badge variant={paymentConfig.variant}>
                  {paymentConfig.label}
                </Badge>
              </div>
            </div>
          </div>

          <Separator />

          {/* SECTION 5: STAFF PH·ª§ TR√ÅCH */}
          <div className="space-y-3">
            <h3 className="text-lg font-semibold flex items-center gap-2">
              <User className="h-5 w-5 text-primary" />
              Nh√¢n vi√™n ph·ª• tr√°ch
            </h3>
            <div className="grid grid-cols-2 gap-4 p-4 bg-muted/50 rounded-lg">
              <div className="space-y-1">
                <p className="text-xs text-muted-foreground">
                  Staff giao xe (checked_out_by)
                </p>
                <p className="font-medium">
                  {booking.checked_out_staff?.full_name || "Ch∆∞a ph√¢n c√¥ng"}
                </p>
                {booking.checked_out_staff?.phone && (
                  <p className="text-xs text-muted-foreground">
                    {booking.checked_out_staff.phone}
                  </p>
                )}
              </div>
              <div className="space-y-1">
                <p className="text-xs text-muted-foreground">
                  Staff nh·∫≠n xe (checked_in_by)
                </p>
                <p className="font-medium">
                  {booking.checked_in_staff?.full_name || "Ch∆∞a ph√¢n c√¥ng"}
                </p>
                {booking.checked_in_staff?.phone && (
                  <p className="text-xs text-muted-foreground">
                    {booking.checked_in_staff.phone}
                  </p>
                )}
              </div>
            </div>
          </div>

          <Separator />

          {/* SECTION 6: GHI CH√ö */}
          <div className="space-y-3">
            <h3 className="text-lg font-semibold flex items-center gap-2">
              <FileText className="h-5 w-5 text-primary" />
              Ghi ch√∫
            </h3>
            <div className="grid grid-cols-2 gap-4">
              <div className="p-4 bg-muted/50 rounded-lg space-y-2">
                <p className="text-sm font-medium text-muted-foreground">
                  Ghi ch√∫ khi nh·∫≠n xe (pickup_notes)
                </p>
                <p className="text-sm">
                  {booking.pickup_notes || "Kh√¥ng c√≥ ghi ch√∫"}
                </p>
              </div>
              <div className="p-4 bg-muted/50 rounded-lg space-y-2">
                <p className="text-sm font-medium text-muted-foreground">
                  Ghi ch√∫ khi tr·∫£ xe (return_notes)
                </p>
                <p className="text-sm">
                  {booking.return_notes || "Ch∆∞a tr·∫£ xe"}
                </p>
              </div>
            </div>
          </div>

          <Separator />

          {/* SECTION 7: T√åNH TR·∫†NG XE V√Ä ·∫¢NH */}
          <div className="space-y-3">
            <h3 className="text-lg font-semibold flex items-center gap-2">
              <ConditionIcon className="h-5 w-5 text-primary" />
              T√¨nh tr·∫°ng xe
            </h3>
            <div className="p-4 bg-muted/50 rounded-lg">
              <div className="flex items-center gap-2 mb-4">
                <span className="text-muted-foreground">
                  T√¨nh tr·∫°ng th√¢n xe:
                </span>
                <Badge variant={conditionConfig.variant}>
                  {conditionConfig.label}
                </Badge>
              </div>

              {/* Photos */}
              {booking.photos && booking.photos.length > 0 ? (
                <div className="space-y-2">
                  <div className="flex items-center gap-2 text-sm text-muted-foreground">
                    <ImageIcon className="h-4 w-4" />
                    <span>·∫¢nh ch·ª•p xe ({booking.photos.length} ·∫£nh)</span>
                  </div>
                  <div className="grid grid-cols-4 gap-3">
                    {booking.photos.map((photo, index) => (
                      <div key={index} className="relative group">
                        <img
                          src={photo}
                          alt={`Photo ${index + 1}`}
                          className="w-full h-32 object-cover rounded-lg border"
                        />
                        <div className="absolute inset-0 bg-black/50 opacity-0 group-hover:opacity-100 transition-opacity rounded-lg flex items-center justify-center">
                          <span className="text-white text-xs">
                            ·∫¢nh {index + 1}
                          </span>
                        </div>
                      </div>
                    ))}
                  </div>
                </div>
              ) : (
                <div className="text-center py-8 text-muted-foreground">
                  <ImageIcon className="h-12 w-12 mx-auto mb-2 opacity-50" />
                  <p className="text-sm">Ch∆∞a c√≥ ·∫£nh xe</p>
                </div>
              )}
            </div>
          </div>

          {/* SECTION 8: TIMESTAMPS */}
          <div className="grid grid-cols-2 gap-4 text-xs text-muted-foreground">
            <div>
              <span>T·∫°o l√∫c: </span>
              <span className="font-mono">
                {formatDateTime(booking.created_at)}
              </span>
            </div>
            <div>
              <span>C·∫≠p nh·∫≠t l√∫c: </span>
              <span className="font-mono">
                {formatDateTime(booking.updated_at)}
              </span>
            </div>
          </div>
        </div>
      </DialogContent>
    </Dialog>
  );
}
